
1 GDPR针对数据跨境转移有一定要求，如必须满足特定规则后才可传输，以下哪个场景不属于跨境转移场景：疑问

A. 在中国的维护终端上，远程查看和分析德国服务器上的个人数据

B. 德国子公司个人数据传输到美国处理

C. 德国子公司的个人数据传输到俄罗斯处理

D. 作为数据处理者的法国供应商，基于成本考虑将数据转移到德国处理



1 产品在代码实现过程中，会存在因为对外部输入参数校验不严格而导致堆栈溢出的漏洞，给产品带来风险，下列关于输入校验说法错误的是()

A. 软件最为普遍的缺陷就是对来自客户端或者外部环境的数据没有进行正确的合法性校验。这种缺陷可以导致几乎所有的程序弱点

B. 直接使用任意用户输入来构造格式化字符串会带来安全风险

C. 当程序需要用户上传文件时,只需要校验用户上传的文件后缀名即可有效防止可执行文件上传漏洞

D. 输入校验中如果没有特殊要求,应当首先考虑采用"白名单”校验形式



1 下面有关IPDRR来源说法正确的是（）(A)

A. IPDRR源自美国NIST Cybersecurity Framework

B. IPDRR源自ISO 27001

C. IPDRR源自美国NIST SP 800-53

D. IPDRR源自OWASP TOP 10







1 系统中禁止存在未公开接口，以下哪些属于未公开接口？ ABCD

A. 隐藏命令或参数

B. 可绕过系统认证的访问接口

C. 可以进入系统的隐藏快捷键

D. 隐藏账号






1 ()与()需求是产品的质量属性之一，也是客户的基本诉求，产品需结合合规、准入及现网安全风险将其构筑在研发过程中 CD

A.最优惠的价格

B.设备平稳运行

C.网络安全

D.隐私保护



为了有效支撑事后审计，并向内部、外部客户证明研发过程风险是可控的，须准确记录所有参与软件研发环节的相关人员的信息和其交付件的信息，保证获取的上下游信息准确，需跟踪和记录的研发过程阶段有(ACD)

A.验证发布

B.现网部署

C.需求分析与设计

D.软件编码与构建



它这里关注的是研发过程阶段，所以，B选项不符合



故障预测预防设计，可采用哪些方法 AD

A.基于故障机理模型的故障预测

B.基于代码的故障预测

C.基于文档的故障预测

D.基于数据驱动的故障预测



如果基于代码、文档可以故障预测，为何不提前采取措施预防呢？因此，BC都不对



对于个人数据保护，系统更应该提供一些技术机制，如下哪些属于匿名化技术 ABCD

A.截断：舍弃属性值的后几位信息来保证数据的模糊性

B.置换：在表中某字段各记录的数据随机进行打乱(shuffling)

C.掩码：将属性值的部分字符替换为固定的特殊字符（例如*）

D.加噪：对原始数据增加一个随机值



这几个选项，看着就像是正确的



以下属于代码安全检视方法的是 ABD

A.静态工具扫描

B.关键字扫描

C.根因分析法

D.自上而下分析法



安全合规成为政府持续关注的焦点，业界在持续探索安全应对策略，平衡好监管和创新之间的关系，业界对业务风险本身的关注点从封闭网络的互联网出口延伸到系统内部模块，从业务结果风险可控，延伸到研发过程风险控制及可视化。针对以上变化点，下列说法正确的是（） ABC

A.在研发过程中对各个环节的关键基础设施落地严格的风险应对措施，如对代码仓尽心更严格的访问、完整性方案设计，保障产品软件开发过程的完整性，一致性，不因恶意篡改导致最终的功能特性与客户预期不相符，设置损害客户利益

B.产品要做到结果风险可控，须通过有效执行研发过程的安全活动控制项要求。

C.产品要做到具备威胁无处不在的视角，通过有效的基础设施及环境保护应对研发过程恶意篡改风险。

D.通过后端测试保证产品质量即可，研发过程风险无须过多关注



根据《华为隐私保护总体政策》要求，在业务活动中构筑隐私保护时，如下哪些不是收集个人数据的原则（ ）。(B)

A. 必要性

B. 机密性

C. 最小限度

D. 目的相关性



1.1 二进制差异消除



1、对于时间宏引入二进制差异



可以选择删除DATE/TIME宏，并测试删除后是否影响业务功能



2、gcc lto优化引入的二进制差异



lto性能优化效果比较好，删除之后要充分的性能测试，或其他方案



3、pyc/pyo文件头事件戳差异：



bepKit工具



4、arj引入随机差异：



通过arj反解后比较内容



1.4 配置管理原则（版本发布）



1、版本转测前，CME检查代码标签，配套文档，将文档和二进制文件共同基线化、转测试



2、版本发布前由配置经理、SE及各领域代表评审确认交付件的完整及配套关系







2、安全可信基础



2.1 理解可信中安全、隐私、韧性、可用性和可靠性的基本概念，熟悉常见软件攻击手段和规避措施，熟悉常见消减风险的方法、工具等



2.1.1 预留的后门消除手段：代码检视







2.1.2 系统之系统



考点：



系统之系统是两个或两个以上独立管理和治理的系统的集合



系统之系统并不存在一个对系统各个部分进行管理的管理者



系统之系统不同部分可分别对应不同的管理和控制策略和规则







2.1.3 故障预测预防技术



是一种主动故障处理技术







2.1.4 故障隔离技术



故障隔离技术的核心思想是降低故障影响范围，防止产生级联故障







2.1.5 故障隔离设计



隔离仓



断路器



组合切片



可靠性沙箱



有限重试







考题里面有个故障域划分设计选项不对







2.1.6 韧性架构或技术措施



降级、隔离、监控可视化等







考题中，云化部署、同操作系统选项不对







2.1.7 数据匿名化



差分隐私：经过加噪聚合得出的统计结果







3、开源及第三方组件使用能力



3.1 开源软件认知、选型及使用、生命周期、义务履行



3.1.1 开源软件版本规范



不可选：rc版本、beta版本、没有版本号的







注1：LTS(Long Term Support)指的是由社区维护的版本



LTS>稳定版>最新：是指由LTS版本优先选择最新LTS版本：无LTS版本，选稳定版；如果有多个稳定版或无法明显判定稳定版，选最新；



注2：谨慎选型：文本中“谨慎选型”标识原则上不建议使用







3.1.2 PDM中的禁选软件



不能：先改成可选，发布之后再标识禁选



应该：不能集成到发布包，仍要集成需要风险备案决策







3.1.3 开源license理解



WTFPL类的license禁选，其license正文就一句话（You just DO WHAT THE FUCK YOU WANT TO）



3.1.4 License隔离措施



3.1.5 开源软件使用规范







涉及到：



【规则】：整包使用开源软件，版本名称与官网保持一致



【规则】：设计源代码交付，对开源原生代码进行修改的代码，使用Patch方式管理



【规则】：开源修改的patch独立存放可管理



【规则】：禁止片段引用开源软件代码







3.1.6 开源试题



1. 关于开源义务履行，说法错误的 (A)



A. 不同许可的开源代码不存在兼容性问题，只要申请后即可按规范使用。



B. 外开源义务是指按照开源许可证要求将一定范围内的代码对外开源，开源范围视具体许可证的要求和产品具体使用方式而定。



C. 修改声明是指公司做出的对修改过的开源软件就修改时间，修改的代码以及修改过的文件做出的声明。无强制要求产品执行，但建议产品在修改GPL/LGPL类开源软件时，履行该义务。



D. 原则上只要使用了开源软件，就需要履行开源使用声明义务。







2. 开源选型的顺序 （2）



XX开源软件，什么开发稳定之类的，目前存在如下版本：



1. 开发过程版本 5.6.dev



2. 最新维护期的版本 LTS 3.4.65



3. 最新发布版本 5.2



4. 社区已知道的稳定的版本 5.0











3. 关于开源patch式管理的说法不正确的是 （1）



1. 开源社区发布的补丁要和自研修改的补丁做成一个patch



2. 原则上，开源修改的patch独立存放可管理



3. 基于开源修改的patch可以包含开源权利人声明



4. 华为修改开源软件的patch量，不要超过5%。











5、在开源选型中，下列哪个符合软件选型的要求？ (B)



A、apache master



B、struts 3.20



C、struts 3.2.1T



D、struts 11.beta











6、关于GPLV2  license的规避产品开发方式，正确： (CD)



A、动态链接方式使用



B、内核态中对kernel调用



C、隔离层，将软件包开源，通过隔离层和其它进程交互



D、进程隔离，通过进程通信交互











7、有关三方件软件引入的评估，正确的是 (ABD)



A、无可以替代的三方件不建议引入



B、未签署网络协议的禁止引入



C、已EOSS三方件不建议引入



D、供应商发布的软件正式版本











8、开源软件及三方件的网络安全要求： (ABCD)



A、必须来源于PMD库中



B、非A/B类红线安全问题，如果高风险CVSS>=7，版本发布前解决，CVSS<7可以等供应商修复后同步版本



C、A类红线和高风险CVSS>=7，版本发布前解决，中低风险CVSS<7的B类红线可以等供应商修复后同步版本



D、研发过程中，三方件要和产品代码一起开展网络安全测试







 9、开源软件patch式管理，不对的



选 开源社区发布的补丁和自研修改的补丁做成一个补丁。











4、通用算法及数据结构



4.1 掌握基本数据结构：数组、字符串、队列、堆、栈、链表、哈希表、二叉树、平衡树等



4.1.1 二叉排序树



给定几个序列，判断是否能够构成一个二叉树的查找排序



举例：95,22,90,23,94,71（不能）







4.1.2 二叉树的第k层节点数



根为第一层  2的k-1次方



所有节点 2的k次方-1



4.1.3 非空二叉排序树



非空二叉排序树T1，删除某节点，形成二叉排序树T2，再将V插入，形成二叉排序树T3



若V是T1的叶子节点，T1是否等于T3？（等于）



若V不是T1的叶子节点，T1是否等于T3？（不等于）



在一棵二叉排序树中删除一个节点后再将此节点插入到二叉排序树中，如果删除的节点是叶子节点，那么在插入节点后，后来的二叉排序树与删除节点之前相同。如果删除的节点不是叶子节点，那么再插入这个节点后，后来的二叉树可能发生变化，不完全相同。







4.1.4 栈



给一个序列a b c d e f g依次入栈，给个出栈序列b d c f e a g，栈容量最小为多少？ （3）



a(b)



a c(d)



a e(f)



a(g)







4.1.5 二叉树遍历，给你前序和后序，给出终须之类的问题







4.2 常用基础算法：常用排序算法、搜索算法（深搜、广搜）、递归、分治、最优化算法、贪心算法、动态规划等



4.2.1 排序算法使用场景



各种排序算法适用场景、举例：



数据范围和数据个数差不多，最有效的是基数排序







4.2.2 冒泡排序算法



考察冒泡排序算法是否正确







4.2.3 使用数组作为循环队列，存放最大元素个数



比如数组大小是N，能够存最大元素个数：N-1



https://blog.csdn.net/weixin_34250434/article/details/93958402







4.2.4 二分查找算法



给几个算法那，找出哪几个是有问题的







5、现代软件工程



5.1 掌握软件开发相关的过程活动及方法，包含需求分析、架构设计、软件设计、开发、测试、项目管理等



5.1.1 质量需求，满足原子性要求







某选课系统质量需求，且满足原子性要求？（1）



1、  用户规模不超过5000，登录密码验证时间不超过2s，用户规模不超过2w，验证时间不超过5s。



2、  系统可以按照院系统计学生选课情况，指定统计范围后1s内返回统计结果。（两个需求，非原子）



3、  系统在2020年1月1号上线部署



4、  Xxx条件不符不允许选课







5.2 掌握典型的现代软件工程方法、实践及应用，包含敏捷、DevOps、产品线工程(PLE)等。



5.2.1 每日站立会议



scrumMaster不会逐个的问每个人问题，团队成员互相交流，不是评价，不是想ScrumMaster报告



是一个简短的团队会议，团队成员每天固定时间地点举行



高效、每个人都集中精力



会议后，Scrum Master指导哪些问题需要帮助团队成员解决







6、调试与定位能力



6.1 掌握JvisualVM/JMC、jstack/jmap工具，定位堆内存/堆外内存、线程资源消耗、典型死锁问题。







6.1.1 Jmap



考察某环境经常full gc，长期内存占用很高，一次内存泄漏，使用的命令







6.1.2 堆内存溢出风险



Jstat -gcutil 1111 2000 对java进程进行观察，其中一个E、O都是100%，预示着有更大的风险发生OOM











6.1.3 Jvisualvm工具



http://visualvm.github.io/



考察关于jvisualvm使用







6.1.4 Dump线程堆栈，检查死锁



从线程dump可以看出：



线程A，持有lock1, 等 lock2



线程B，持有lock2，等lock3



线程C，持有lock3，等lock1



形成死锁







6.2 掌握远程调试原理及参数设置







7、编译构建知识与应用



7.1 掌握Debug版与Release版控制参数



7.2 掌握静态检查告警总体开关参数



7.2.1 编译参数导致编译告警被关闭



禁止使用



-nowarn -Xlint：none -Xlint：name



-g：none -g：[keyword list]







必须使用



-source -target -Xlint：all



Maven-compiler-plugin的showWarnings设置为true







-X 输出非标准选项的提要



-Werror 出现警告时终止编译



-nowarn 不生成任何警告



-Xlint：none 不生成任何警告







7.2.2 泛型没有具体化，给出哪几行有编译警告







7.3 掌握Java语言语法兼容性控制参数



7.3.1 Lamda表达式



编译时需要 javac -source 8 xxx







7.4 以POM文件格式组织编译依赖树



7.4.1dependencies与dependencyManagement的区别



1、dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中集成该依赖项（全部继承）



2、dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。如果不在子项目中声明依赖，是不会从父项目中继承下来的；只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中集成该项，并且version和scope都读取子父pom；另外如果子项目中制定了版本号，那么会使用子项目中指定的jar版本



3、scope取值为import，只能用于dependencyManagement







7.5 maven体系结构



7.5.1 Maven生命周期



Maven 构建生命周期就是Maven讲一个整体任务划分为一个个的阶段，类似于流程图，按顺序依次执行。也可以指定该任务执行到中间的某个阶段结束。



Maven 的内部有三个构建生命周期，分别是clean、default、site。其中default生命周期的核心阶段如下所示：



Mvn install ：将完成validate、compile、test、package、verify、install阶段，并将package生成的包发布到本地仓库中，团队其他成员没法使用。



Mvn dependency：tree 分析项目依赖关系



Mvn test运行单元测试



Mvn clean 清理上一次构建产生的内容







7.5.2 Maven依赖冲突解决原则



两个原则



1、最短路径优先



举例： A->B->Y(2.0), A->C->D->Y(1.0) 则Y使用2.0



2、  同路径先声明优先



举例：  A->B->Y(2.0), A->C->Y(1.0) ，如果B在C前面声明，则Y使用2.0







7.6 掌握公司构建规范中，对Java软件的规范约束及设计原则







8 未归类单选



1、源码交付时，小王提交代码错误



——代码管理不能依靠人的责任心保障正确性



2、数据是正整数，数据范围和个数差不多，哪个排序最有效



——计数排序



3、jinfo的用法不正确



——可以查看Java程序的内存使用情况



4、想要确定哪些类的示例占内存较多



——jmap



5.、Java虚拟机参数说法不正确



——client有更好性能



6、无编译错误



——javac -source 8



7、栈容量最小



——3



8、开源patch化管理说法不正确



——开源社区发布补丁和自验修改补丁做成一个patch统一管理



9、产品选哪个软件版本更合适



——3.4.26



10、开源义务履行错误的



——不同许可证的开源代码不存在兼容性问题



11、选课软件的质量需求满足原子性要求



——不超过5千人，不超过2秒，不超过2万人



12、 二叉树不构成查找路径



——95,22,91,24,94,71



13、不符合持续交付的理念



——失败的用例注释掉



14、二叉树的第k层的节点数最多为



——2的k-1次方



15、升序冒泡描述正确的是



——长度-1，大的值放到后面的



16、jstat -gcutil



——30001



17、maven用法错误的



——install 其他人可以使用



18、循环队列存放的最大元素



——n-1



19、小张是CME，TR2评审会上汇报了配置项的基线情况



——配置状态发布



20、关于BEP错误的是



——时间戳的差异可以忽略



21、移动设备上敏感信息访问开关，属于



——可干预性



22、韧性描述错误的是



——多样性使用异构增加了成本



23、冗余系统可用性说法错误的是



——倒换的成功率越高，冗余系统可用性越低



24、属于故障检测技术的是



——时间检查(心跳检测)



25、不属于故障隔离设计方法的是



——重试设计



26、过载控制设计说法错误的是



——业务保障原则，确保大流量冲击时所有业务不被丢弃



27、符合候选软件的引入要求



——3.19



28、每日站立会议说法错误的是



——对成员工作进行评价



29、maven对scope取值描述有误的是



——system 适用于所有阶段，随项目一期发布



30、客户指出华为平台向产品发布的版本存在被篡改



——平台版本不需要实施数字签名



31、某产品在向认证机构进行该产品软件版本11.1的源代码交付时，开发工程师小王



——源代码与二进制版本的对应关系应该通过配置库，产品软件全量信息树



32、可靠性测试FIT



——通过向系统注入在实际应用中可能发生的故障



33、某产品为防止网络攻击，采取了如下防范措施，不属于韧性技术或架构的



——软件采用云化部署，相同的操作系统



34、开源软件使用过程中，开源软件



——经评审不得随意修改开源原生代码，但开源定制无限制



35、开源使用



——整包使用开源软件，版本名称可以定制命名



36、哪些算法都是不稳定的



——选择 堆排序



37、关于软件升级不中断业务，正确



——升级前后应进行健康检查



38、当一个企业不得不支持许多相似但不完全相同的系统时，最有效的一种复用方法是（有风险，我选的可能是错的）



——应用框架（单选，我选这个）



——应用系统复用



——分布式系统



39、可用于分析线程死锁问题的命令是



——jstack [options] <pid>



40、C语言定义的单项列表，和双向列表，N个数存放到这两个链表中



——按照节点指针删除节点，在时间复杂度上，两个链表是不一样的



41、以下哪个说法是错误的



——链表存储空间全都连续，即允许元素的随机访问



42、一个二叉树的前序遍历：abdefgc，中序遍历：debgfac，后序遍历为



——edgfbca



43、产品计划引入选型OpenSSL软件，下面说法正确的是



——openssl-fips是OpenSSL的一个分支开源的独立项目，应该以新软件的方式引入



44、节点类型如下的双向循环链表，删除一个带有前驱和后继的节点p的操作序列正确的是



——p->next->prev = p->prev; p->prev->next = p->next;



45、关于冗余设计，下面说法错误的是



——系统的冗余设计是由硬件独立完成的，与软件关系不大



46、某CT产品3年前从供应商购买的一款第三方软件X…产品应该采用的策略是



——切换第三方软件X的新版本，确保能享用供应商完整的保障能力



47、下面哪些情况能出现死锁



——多个进程竞争资源出现了循环等待



48、重新执行已经你进行过的一些测试…是哪一种测试



——回归测试



49、pom中定义使用maven dependency plugin插件的位置



——选在bulid中的那个



50、算法稳定的



——选冒泡和基数



51、代码隔离与目录管理说法错误



——第三方软件和开源软件目录应该合并管理



52、某二叉树中序为abcdefg，后序为bdcafge，左子树中节点数目



——选4



53、jamp-hsito:live 内存泄露



——选那个增加的



54、不符合持续交付的理念



——将失败的测试用例注释掉，以提高构建成功率



55、项目使用maven工具构建，依赖关系ABY2.0 AE1.0



——选1.0



56、若定义int a[5] =[1,2,3,4]



——选5



57、某CI产品，3年前从供应商购买了一款第三方软件X…正确的策略



——选切换第三方软件X的版本，确保享受供应闪完整的保障能力



58、不是敏捷开发的基本原则



——严格遵循计划和流程



59、在进行二进制文件差异消除时，下列二进制消除方案哪一个不合适



——gcc ito优化引入二进制差异，直接删除ito优化选项消除差异，无需对业务进行测试



60、使用jstat -gcutil pid 2000分别对1001,2001,3001,进行状态检查，一下说法正确的是



——进程30001更大的风险发生OM



61、给定K个正整数的序列{N1、N2…NK}，状态转移方程可以表示为



——sum[i] = max(sum[i-1]+a[i],a[i]) 最长的



62、故障预测预防技术，错误的是



——故障预测预防是一种被动的故障处理技术



63、启动java程序时，年轻代堆大小500M



——-Xmn50M



64、以下哪个目标无法通过欺骗达成



——将系统进行划分，已限制成功攻击的传播和损害。



65、威胁建模的测试方法，在那个阶段使用



——测试方案设计



66、若一个栈的入栈顺序为 1 2 3 N，入栈中随机出栈，如果第一个元素是i，那么第j个出栈的是



——不确定



67、abdcde排列组合有多少



——120   无耻5！



9 未归类多选



1、为保证业务的正常运行，提高产品和解决方案的安全和韧性，可以从以下哪些方面进行设计？



——全选



2、对于个人数据保护，系统应该提供一些技术机制，以下哪些属于匿名化技术？



——全选（加噪、置换、掩码、截断）



3、开源软件需要经常升级到选型出来的最优版本（全选）



——老旧的开源软件版本可能存在无法获取到漏洞信息，社区不再维护等问题



——新的价值特性往往只有在最新的版本才会体现。如果需要使用



——最优版本不等于最新版本，最的版本可能存在稳定性问题



——老旧的开源软件可能会出现安全架构老化等问题



4、开源使用不正确的是 不选C



——开源软件近3年无人维护



——拷贝Apache license 2.0的排序算法



——开源软件的选用，是产品在需求分析和架构设计时决定的；产品需基于全量全视角视图管理产品和平台使用的开源及三方软件



——A软件存在严重漏洞 CVSS>7，安全SE发现该漏洞未调用，可以不处理



——130K代码中仅10行代码相似度高，该10行可以认为是自研



5、三方件选型，双选



动态链接和Kernel不选



6、堆栈正确的是，三选



——3个全锁



7、编译参数，双选



——nowarn



——-xlint none



8、有关三方件引入评估标准正确  ABC(专家给的答案，但是貌似也不对)



——供应商发布的软件正式版本，可以引入



——未签署供应商网络安全协议的软件，禁止引入



——业界无替代的第三方软件，可能存在供应风险，不建议引入



——已EOSS/即将停止销售的第三方软件，不建议引入



9、老张有多篇设计文档命名相似，应该怎么办 ，不选A



——为了高效共享，在本地直接共享，不提交统一配置库



——规范化命名



——提交评审流程，进行基线



——按照配置项管理要求归档



10、升序数组，二分查找方法错误的是



——有一个正确实现的，不选



11、有一段代码编译告警



—— 1 2 3



12、Maven构建依赖描述正确



——2.0不选 和 dependencyMangement->dependencies->dependency不选



13、三方件网络安全要求描述正确的是



——全选 CVSS>7 在2个选项中出现过



14、故障预测预防设计，可以采用哪些方法



——不选代码和文档



15、为了有效支撑事后审计，...需跟踪和记录研发过程的阶段



——不选现网部署



16、面向服务的方法好处



——全选



17、顺序表，三选



——不选长度随意变动



18、使用javac编译时，包含下面那几个过程



——不选 server client compiler



19、某产品在进行源码交付时被认证机构认定为所集成的A平台源码无法溯源；产品及平台中存在的问题是



——全选



20、安全合规成为政府持续关注的焦点，业界在持续探索安全对应策略…,下面说法正确的是



——不选通过后端测试保证产品质量即可，研发过程无需过多关注



21、一下空串的叙述正确的是



——空串长度为零



——空串是任意串的子串



——空串不含任何字符



22、关于GPLV2 license的规避产品开源方式，说法正确的是



——内核态和动态链接方式两个不选



23、()和()是产品的质量属性之一



——网络安全和隐私保护



24、以下关于开源选型的说法，那些是正确的



——不选xml解析开源软件SAX性能比dom快10倍



25、有以下一段代码，使用那条命令无编译错误



——选java 8



·26、工程师老张讲写好的模块设计文档存在本地，老张应该怎么做



——不选本地共享



关于软件工程，以下说法错误的是(B)

A.软件工程发展的目的就是希望找到合适的方法和技术适用软件系统

B.软件工程仅指实现软件生产开发的活动序列

C.软件工程是一门研究用工程化方法构建和维护有效的、实用的和高质量的软件的学科，它涉及程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式灯方面

D.软件工程的目的是支持专业化的软件开发、而不仅仅是个人编程



下面关于系统之系统描述错误的是(D)

A.系统之系统中的系统的不同部分可分别对应不同的管理和控制策略和规则

B.系统之系统中并不存在一个对系统各个部分进行管理的管理者

C.系统之系统是两个或以上独立管理和治理的系统的集合

D.系统之系统不可能是最小规模系统，如包含不同提供商提供的服务的较小的系统，大规模系统经常是系统之系统



关于每日站立会议，下面的()说法是错误的(B)

A.站会的要求是高效，并且让每个人都集中精力

B.Scrum Master应该对成员所描述的任务内容进行评价

C.它是一个简短的团队会议，由所有团队成员在每天固定的时间和地点进行

D.它不是一个汇报会议，而是开发团队内部的沟通会议，以便快速发现问题



下面的（）不是敏捷开发的基本原则(B)

A.坚持不懈的追求技术卓越和良好设计

B.严格遵循计划和流程

C.尽早和持续的交付有价值软件

D.要面对面进行交流



一个软件通过柱状图、地图等多种方式显示铁路实时订票情况，该功能使用观察者模式实现的话，其中的观察者对象和被观察者（即主题）对象分别是什么(A)

A.观察者是各个不同的显示视图，被观察者是铁路实时订票数据

B.观察者是铁路实时订票数据，被观察者是各个不同的显示视图

C.观察者是整个实时监控界面，被观察者是铁路实时订票数据

D.观察者是铁路实时订票数据，被观察者是整个实时监控界面



观察者模式



下面的（）不是Scrum主管的职责(C)

A.组织每日站立会议

B.引导团队正确应用敏捷实践

C.定义产品需求

D.促进团队紧密协作



当一个企业不得不支持许多相似但不完全相同的系统时，最有效的一种复用方法是（）(A)

A.软件产品工程SPLE

B.分布式系统

C.应用框架

D.应用系统复用



一个项目群中骨干员工离职，组织正在努力重新物色人选。在新人确定前，项目经理和团队成员应该怎么做？D

A. 更新风险管理计划

B. 更新项目管理计划

C. 不采取任何措施

D. 更新风险清单并分析风险影响



FMEA（Failure Mode and Effects Analysis）是一种可靠性分析方法，可以用于产品的设计阶段。下列哪个选项不是设计阶段FMEA分析的输出？(B)

A. 硬件故障管理需求

B. 软件功能需求

C. FMEA分析表

D. 软件故障管理需求



软件功能需求不是FMEA分析的输出。



CSF(Cybersecurity Framework)核心框架包含5个功能IPDRR，其中P代表保护功能（Protect Function），保护功能可以限制或抑制网络安全事件的潜在影响。以下哪一组全部属于核心框架中的保护功能项（）A

A. 身份管理和访问控制、数据安全、信息保护流程和步骤、安全运维

B. 身份管理和访问控制、数据安全、安全运维、风险评估

C. 身份管理和访问控制、数据安全、安全运维、安全连续监控

D. 身份管理和访问控制、数据安全、信息保护流程和步骤、安全连续监控



B选项中风险评估属于Identify；C选项中安全连续监控 属于Detect；D选项中安全连续监控 属于Detect



§ 多选

某电商公司的网站（单体应用，约100W行Java代码）的部署周期（需求提出到部署产品环境的时间）为4周（工作日20天），其中需求分析3天，开发时间为5天，测试人员手动进行功能测试时间为6天，环境准备和部署时间为4天，该公司为了提升自身竞争力，目标在半年内将部署周期降低到2周，以下哪些DevOps时间可以帮助该公司实现目标 ABC

A.功能测试自动化

B.自动化部署

C.软件开发过程引入敏捷、精益思维，最小化需求范围(MVP)

D.微服务拆分



因为是单体应用，因此，D没有选？



面向服务的方法的好处：ABCD

A.服务提供商会公开服务的信息，任何获得授权的用户都可以使用相应服务

B.组织内部或外部的服务提供商都可以提供服务

C.服务的用户能根据使用而不是提供商提供的服务来付费

D.应用能够延迟服务绑定直到这些服务被部署或执行



常见的风险计划应对策略包括（）BCD

A. 采用忽略策略应对具体风险概率

B. 采用应急计划处置风险转变为具体问题的事件

C. 采用规避策略降低风险出现的概率

D. 采用最小化策略降低风险的影响



忽略/接受风险是风险监控的措施，可接受的风险通常不需要做风险计划



从浴盆曲线来看，电子产品的失效包括以下哪几个阶段？ ABD

A. 耗损失效期

B. 偶然失效期

C. 市场失效期

D. 早期失效期

E. 生产失效期



浴盆曲线的三个阶段是早期失效期、偶然失效期和耗损失效期。



某大学图书馆需要建立一个新的管理系统，下列需求属于功能性需求____。 AB

A. 用户可以根据图书名搜索到该图书

B. 系统可以查询用户当前已经借到的图书

C. 系统应该24H可用，宕机时间不超过5s

D. 用户输入书名后。2s内查询到该书的信息

E. 管理员再培训1H后可以使用该系统的管理功能

F. 应将每个学生的学生编号作为该学生的唯一标识



(AB)



功能需求：AB

产品需求：CDE

组织需求：F

参考：



科目二、可信编程知识与应用(Java)难点解析

不属于软件开发危机的一部分：B

A. 软件产品质量无法保证

B. 客户需求持续下降

C. 开发成本难以控制

D. 开发进度难以预测



下面描述中，不属于软件危机表现的是（ ）。A

A.软件过程不规范

B.软件开发生产率低

C.软件质量难以控制

D.软件成本不断提高



在开源软件引入选型中，以下哪项符合候选软件的引入要求？(C)

A.ADAPDX master

B.Apache Struts 1.1rc2

C.cryptojs 3.19

D.Apache ZooKeeper 3.5.4-beta



关于开源义务履行，下列说法错误的是 A 疑问

A.修改声明是指公司做出的对修改过的开源软件就修改时间，修改的代码以及修改过的文件做出的声明，但建议产品在修改GPL/LGPL类开源软件时，履行该义务

B.不同该许可证的开源代码不存在兼容性问题（如GPL License与BDS License），只要申请后即可按规范使用

C.代码对外开源义务是指按照开源许可证要求将一定范围内的代码对外开源，开源范围视具体许可证的要求和产品具体使用方式而定

D.原则上只要使用了开源软件，就需要履行开源使用声明义务



来源可靠是开源及第三方软件管理的要求之一，如下软件来源一定可靠的是（）(B)

A.Maven、npm、Pypi

B.开源软件发布的官方网站，或官方指定的获取渠道

C.GitHub

D.华军软件园



产品计划引入选型OpenSSL软件，下列说法正确的是(D)

A.可以从任意网址下载OpenSSL源码包，只要扫描不出病毒

B.修改的OpenSSL软件源码如果得到作者的认可，产品可以不用回馈社区直接引入选型OpenSSL

C.从官网下载OpenSSL源码太麻烦，可以直接使用git命令下载github上的openssl源码

D.openssl-fips是OpenSSL的一个分支开源的独立项目，应该以新软件的方式引入



某CT产品3年前从供应商购买的一款第三方软件X，并在产品V1R1C00软件版本中配套A01单板使用。目前现网V1R1C01版本存量大，客户反馈较稳定，产品准备新立项V1R4C00版本，发现第三方软件X存在新版本，并且新版本也兼容A01单板，但切换测试成本较大，同时该软件版本标准维保即将到期，但供应商表示可以为华为单独提供延长维保服务，根据第三方软件生命周期规则，产品应该采取的策略是：(A)

A.切换第三方版本X的新版本，确保能享受供应商完整的保障能力

B.由于不是新产品，不考虑升级第三方软件X新版本

C.考虑测试成本，通过购买供应商延长维保服务，继续使用X的老版本

D.由于架构未调整，不考虑升级第三方软件X新版本



§ 多选

关于开源使用，下列说法错误的是 ABD 疑问

A.某产品开发一款仅给内部一线行销员工使用的APP，并上架华为手机应用市场开放下载（但必须华为员工账号产能登录使用），该APP通过静态编译方式使用了一款AGPL开源软件，由于只是内部一线行销员工才能登录使用，可以不需要履行开源义务

B.公有云服务产品A通过静态链接的方式集成使用了license为GPL V2.0的开源软件，服务产品A可以不履行代码开源义务

C.某员工在业余时间以个人名义，在github开源了X项目，该员工在公司办公环境下载该X项目代码集成到产品A中使用，产品A不需要履行开源义务

D.产品A自研开发且对外开源XXComb软件，并捐献到Apache基金会成为顶级项目，产品B选用社区XXComb软件，仍应认定XXComb软件为自研软件



有关第三方软件引入的评估标准，正确的是 BC

A.已EOSS/即将停止销售的第三方软件不建议引入

B.业界无替换的第三方软件，可能存在供应风险，不建议引入

C.未签署供应商网络安全协议的软件禁止引入

D.供应商发布的软件正式版本，可以引入



A为禁止引入 D要评估后



以下关于开源选型的说法，哪些是正确的 BD

A.铲平A使用一款tinyxml软件，内存分配和解析速度均可满足产品要求，且现网已稳定运行10+年，社区近期发布了tinyxml2，且社区也表示后续主要在tinyxml2上进行维护，其解析速度为tinyxml的5倍，但综合考虑升级成本及新版本的影响，产品确定继续使用tinyxml

B.Json-lib软件社区2013年后社区已无人贡献，建议产品独臂Jackson、fastJson、Gson等同类软件，结合产品使用场景，选择生态、license较友好的开源软件

C.XML解析开源软件SAX性能比Dom4j快10倍，SAX 2004年发布最后一个稳定版本，当前平均每周下载量34+次，对性能要求较高，且使用场景为只读不写（xml文件）的产品可以考虑选择此软件

D.Log4j日志组件的作者2015年发布log4j2.X和logback；性能比log4j1.X高10倍，建议使用log4j1.X的产品考虑切换到log2.X或logback



关于GPL V2 License的规避产品开源方式，以下做法正确的是 AC

A.若无法直接进程隔离，则可制作隔离层，将该软件包装为一个进程（需开源），通过隔离层进行交互

B.在内核态中对Linux kernel进行调用，以避免GPL传染

C.可以采用进程隔离方式使用，即产品与GPL软件在不同进程中运行，通过进程间通信进行交互

D.以动态链接的方式使用GPL软件，使产品代码不会被GPL传染



LGPL 可以动态链接规避，GPL 要进程隔离，Linux kernel 用户态才能避免传染；



选用开源软件时，需考虑以下哪些方面 ABCD

A.合法合规

B.网络安全风险

C.生命周期情况

D.开源软件的技术生态



某需要对外商用发布的产品使用了开源软件，对于该产品，以下描述正确的是(B)

A. 若该产品使用了GPL软件，根据GPL license规定，该产品不得静态链接使用 GPL 软件

B. LGPL允许静态链接使用，但要履行对应代码开源义务

C. 若是独立进程使用GPL软件，则无需履行代码开源义务

D. 产品不链接GPL软件，而是将所需功能函数拷贝嵌入产品代码，则无需履行代码开源义务。



LGPL 静态链接、动态链接都是可以用的，GPL 也是都可以用，只不过，LGPL 可以用动态链接避免传染，GPL 则需要进程隔离避免传染



关于开源软件常见license的解读正确的是？ ABC

A. BSD类license，如Apache/BSD/MIT等，原则上没有对外开源要求

B. MPL类软件若无修改，则无需对外开源

C. GPL软件本身须开源，且具有传染性，与该软件在同一进程中运行的代码都必须对外开源

D. LGPL软件本身须开源，且具有传染性，与其动态链接部分的代码也必须以LGPL许可开源；静态链接则不被传染



产品在开源软件使用过程中，下面哪项对开源软件的使用描述是不恰当的？ 我觉得选B

A. 代码库中的开源原始包需和开源社区原始包一致

B. 经评审不得随意修改开源原生代码，但基于开源定制的代码规模无限制

C. 禁止片段引用开源软件

D. 涉及源代码交付，对开源原生代码进行修改的代码，使用Patch方式管理



下面关于对开源软件代码修改说法正确的是 AC

A. 产品P引入XX开源软件，工程师小A分析&应用后认为需要对开源代码进行少量修改才能满足产品需求，通过团队架构评审等确认后，将修改代码以Patch的方式进行管理

B. 产品P引入XX开源软件，工程师小A分析&应用后认为将XX软件的其中几个接口再重新封装形成新接口，可以更好支撑业务，于是小A在XX软件代码文件中新增一个功能接口，并且归档到开源软件目录支撑产品编译发布

C. 产品P引入XX开源软件，工程师小A分析&应用后确认只使用其中2个特性，将开源软件归档到开源代码目录，并通过部分编译的形式，仅编译需要的特性进行打包发布

D. 产品P引入XX开源软件，工程师小A分析&应用后确认只使用其中2个特性，于是将其它特性代码删除后，归档到开源代码目录支撑产品编译发布

